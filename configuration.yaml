# Loads default set of integrations. Do not remove.
default_config:

wake_on_lan:

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
homekit: !include homekit_entities.yaml
cloud: !include google_home_entities.yaml

frontend:
  extra_module_url:
    - local/card-mod.js

zone:
  - name: Home
    latitude: !secret home_lat
    longitude: !secret home_long
    radius: 200
    icon: mdi:home

logbook:
  exclude:
    entities:
      - sensor.symo_10_0_3_m_1_error_code
      - sensor.symo_10_0_3_m_1_status_code
      - sensor.awtrix_6dbd0c_current_app
    entity_globs:
      - automation.awtrix*

recorder:
  purge_keep_days: 10 # default is 10 days
  exclude:
    entities:
      - sensor.symo_10_0_3_m_1_error_code
      - sensor.symo_10_0_3_m_1_status_code

notify:
  - name: "patrick and kathleen"
    platform: group
    services:
      - action: mobile_app_patricks_iphone
      - action: mobile_app_kathleens_iphone

#CPU Temperature
command_line:
  - sensor:
      name: CPU Temperature
      command: "cat /sys/class/thermal/thermal_zone1/temp"
      scan_interval: 15
      unique_id: ee6886b7-d378-4d10-ab4f-5ad0731f9aba
      unit_of_measurement: "Â°C"
      value_template: "{{ value | multiply(0.001) | round(1) }}"

sensor:
  - platform: filter
    name: Filtered pool pump power Lowpass Filter
    unique_id: id_pool_pump_power_lowpass_filter
    entity_id: sensor.pool_pump_current_consumption
    filters:
      - filter: lowpass
        time_constant: 60
        precision: 4

  - platform: statistics
    # From https://community.home-assistant.io/t/quick-bathroom-fan-humidity-switch-control/421996
    name: Ensuite Humidity Average Linear 24h
    unique_id: id_ensuite_humidity_average
    entity_id: sensor.ensuite_environmental_humidity
    state_characteristic: average_linear
    max_age:
      hours: 24

cover:
  - platform: template
    covers:
      garage_door:
        unique_id: id_garage_door
        device_class: garage
        friendly_name: "Garage Door"
        value_template: >-
          {% if is_state('sensor.garage_door_state','open') %}
            Open
          {% elif is_state('sensor.garage_door_state','closed') %}
            Closed
          {% elif is_state('sensor.garage_door_state','opening') %}
            Opening
          {% else %}
            Closing
          {% endif %}
        open_cover:
          - condition: state
            entity_id: binary_sensor.garage_door_bottom_magnet
            state: "off"
          - action: switch.turn_on
            target:
              entity_id: switch.garage_door
        close_cover:
          - condition: state
            entity_id: binary_sensor.garage_door_top_magnet
            state: "off"
          - action: switch.turn_on
            target:
              entity_id: switch.garage_door
        stop_cover:
          - action: switch.turn_on
            target:
              entity_id: switch.garage_door
  - platform: template
    covers:
      driveway_gate:
        unique_id: id_driveway_gate
        device_class: gate
        friendly_name: "Driveway Gate"
        value_template: >-
          {% if is_state('sensor.driveway_gate_state','open') %}
            Open
          {% elif is_state('sensor.driveway_gate_state','closed') %}
            Closed
          {% elif is_state('sensor.driveway_gate_state','opening') %}
            Opening
          {% else %}
            Closing
          {% endif %}
        open_cover:
          - condition: state
            entity_id: binary_sensor.driveway_gate_closed
            state: "on"
          - action: switch.turn_on
            target:
              entity_id: switch.driveway_gate
        close_cover:
          - condition: state
            entity_id: binary_sensor.driveway_gate_open
            state: "on"
          - action: switch.turn_on
            target:
              entity_id: switch.driveway_gate
        stop_cover:
          - action: switch.turn_on
            target:
              entity_id: switch.driveway_gate

template:
  - trigger:
      - trigger: state
        entity_id:
          - binary_sensor.garage_door_top_magnet
          - binary_sensor.garage_door_bottom_magnet
    sensor:
      - name: Garage door state
        state: >
          {# garage_door: on means open, off means closed #}
          {% set close_on = is_state('binary_sensor.garage_door_bottom_magnet','off') %}
          {% set open_on = is_state('binary_sensor.garage_door_top_magnet','off') %}
          {% if open_on and not close_on %}
            open
          {% elif not open_on and close_on %}
            closed
          {% elif open_on and close_on %}
            sensor error
          {% else %}
            {% if trigger.entity_id == 'binary_sensor.garage_door_bottom_magnet' %}
              opening
            {% else %}
              closing
            {% endif %}
          {% endif %}
  - trigger:
      - trigger: state
        entity_id:
          - binary_sensor.driveway_gate_closed
          - binary_sensor.driveway_gate_open
    sensor:
      - name: Driveway gate state
        state: >
          {# driveway gate state: on means open, off means closed #}
          {% set close_on = is_state('binary_sensor.driveway_gate_closed','on') %}
          {% set open_on = is_state('binary_sensor.driveway_gate_open','on') %}
          {% if open_on and not close_on %}
            open
          {% elif not open_on and close_on %}
            closed
          {% elif open_on and close_on %}
            sensor error
          {% else %}
            {% if trigger.entity_id == 'binary_sensor.driveway_gate_closed' %}
              opening
            {% else %}
              closing
            {% endif %}
          {% endif %}

  - sensor:
      - name: "Number of lights on"
        state: "{{ expand(state_attr('light.all_lights', 'entity_id'))| selectattr('state','eq','on')|map(attribute='entity_id')|list|count }}"

  - sensor:
      # pool pump power:
      # High 937W
      # Med 350W
      # Low 155W
      - name: "Pool pump status"
        unique_id: id_pool_pump_status
        icon: mdi:pump
        state: >
          {% set pool_power = states('sensor.filtered_pool_pump_power_lowpass_filter') %}
          {% if states('switch.pool_pump') == 'off' %}
            Off
          {% elif pool_power|is_number %}
            {% set pool_power = pool_power|float %}
            {% if pool_power < 50 %}
              Off
            {% elif 50 <= pool_power < 400 %}
              Low speed
            {% elif 400 <= pool_power < 600 %}
              Medium speed
            {% elif pool_power >= 600 %}
              High speed
            {% endif %}
          {% else %}
            Unknown
          {% endif %}

  - binary_sensor:
      - name: "Driveway light beam"
        unique_id: id_driveway_light_beam
        device_class: motion
        delay_off:
          milliseconds: 1500
        state: >
          {{ states('sensor.driveway_gate_light_beam') | float > 3.0 }}

binary_sensor:
  - platform: group
    name: "Shelly overheating sensors"
    entities:
      - binary_sensor.alfresco_and_pool_perimeter_overheating
      - binary_sensor.back_lounge_downlights_overheating
      - binary_sensor.stairs_and_dining_overheating
      - binary_sensor.dining_pendant_and_spare_overheating
      - binary_sensor.front_hall_lower_overheating
      - binary_sensor.front_hall_upper_overheating
      - binary_sensor.front_lounge_overheating
      - binary_sensor.kitchen_downlights_overheating
      - binary_sensor.kitchen_pendant_and_spare_overheating
      - binary_sensor.laundry_and_laundry_path_overheating
      - binary_sensor.rear_flood_and_garden_lights_overheating
      - binary_sensor.wir_downlight_overheating

light:
  - platform: group
    name: "All Lights"
    entities:
      # Get this list from developer tools / template
      # - {{ states.light|map(attribute='entity_id')|join('\n- ') }}

      # Group: Front yard lights
      - light.front_stone_up_down
      - light.front_porch
      - light.front_garden_lights
      - light.meterbox_bunker
      - light.front_north_side_flood

      # Group: Front lounge and hall lights
      - light.front_lounge_downlight
      - light.front_lounge_pendant
      - light.front_hall_lamp
      - light.led_strip_front_hall_dimmer
      - light.front_lounge_sideboard_lamp

      - light.garage_downlights
      - light.workshop_downlight
      - light.workshop_rgb_light
      - light.led_strip_workshop_shelf_dimmer

      - light.courtyard_flood_light

      - light.wir_downlight
      - light.led_strip_wir
      - light.bedside_lamp_kathleen

      - light.laundry_downlight
      - light.laundry_bunker_light

      # Group: Kitchen lights
      - light.kitchen_downlights
      - light.kitchen_hall_downlights
      - light.kitchen_pendant
      - light.led_strip_kitchen_kicker
      - light.stairs_light
      - light.main_hall_downlights

      - light.dining_downlight

      - light.butlers_downlight
      - light.led_strip_butlers_overhead_cupboards

      # Group: Back lounge lights
      - light.back_lounge_downlights
      - light.back_lounge_pendant
      - light.back_lounge_sideboard_lamp
      - light.lamp_rhs_fireplace
      # - light.twinkly_back_lounge

      # Group: Back yard lights
      - light.alfresco_downlights
      - light.pool_perimeter_downlights
      - light.rear_flood_light
      - light.rear_garden_lights
      - light.led_strip_fire_pit_dimmer
      - light.pool_light_controller_pool_lights

      - light.jess_toilet_light
