esphome:
  name: ld2410-esp32c3
  friendly_name: LD2410 ESP32C3
  on_boot:
    priority: 600
    then:
      - repeat:
          count: 4
          then:
            - light.turn_on:
                id: rgb_led
                red: 100%
                green: 0%
                blue: 100%
                brightness: 50%
            - delay: 200ms
            - light.turn_off: rgb_led
            - delay: 200ms
      # - delay: 2s

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "kqHXto5uo0OIrGIMjAzeBRAe+6e4Jr0KxTmuMMPp3sM="

ota:
  password: "61e64891977ebb32f414610ad759d14a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

globals:
  - id: display_mode
    type: bool
    restore_value: yes
    initial_value: 'false'

uart:
  tx_pin: 21
  rx_pin: 20
  baud_rate: 256000

button:
  - platform: ld2410
    factory_reset:
      name: "factory reset"
    restart:
      name: "restart"
    query_params:
      name: query params

light:
  # - platform: neopixelbus
  - platform: esp32_rmt_led_strip
    id: rgb_led
    name: RGB LED
    internal: False
    # variant: WS2812
    rmt_channel: 0
    chipset: WS2812
    pin: 10
    num_leds: 2
    # type: GRB
    rgb_order: GRB
    default_transition_length: 100ms
    effects:
      - addressable_rainbow:
          name: Rainbow
          speed: 15
          width: 20
      - addressable_scan:
          name: Scan 5
          move_interval: 100ms
      - addressable_scan:
          name: Scan 4
          move_interval: 150ms
      - addressable_scan:
          name: Scan 3
          move_interval: 200ms
      - addressable_scan:
          name: Scan 2
          move_interval: 250ms
      - addressable_scan:
          name: Scan 1
          move_interval: 300ms

ld2410:

select:
  - platform: ld2410
    distance_resolution:
      name: "distance resolution"
    baud_rate:
      name: "baud rate"
    # light_function:
    #   name: light function
    # out_pin_level:
    #   name: out pin level

binary_sensor:
  - platform: gpio
    id: boot_btn
    pin:
      number: GPIO9
      inverted: true
      mode:
        input: true
        pullup: True
    filters:
      - delayed_on: 10ms # debounce
    on_press: 
      then:
        - lambda: |-
            id(display_mode) = !id(display_mode);
            ESP_LOGI("Button", "LED Display Mode is %s", id(display_mode) ? "True" : "False");
        - if:
            condition:
              lambda: 'return !id(display_mode);'
            then:
              - light.turn_on:
                  id: rgb_led
                  effect: 'None'
              - light.turn_off: rgb_led

  - platform: ld2410
    has_target:
      name: Presence
      # on_release:
      #   then:
      #     - light.turn_off: rgb_led
    has_moving_target:
      name: Moving Target
      on_press:
        - if:
            condition:
              lambda: 'return !id(display_mode);'
            then:
              - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 0
                  color_brightness: 100%
                  red: 0%
                  green: 100%
                  blue: 0%
      on_release:
        - if:
            condition:
              lambda: 'return !id(display_mode);'
            then:
              - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 0
                  color_brightness: 0%
                  red: 0%
                  green: 0%
                  blue: 0%

    has_still_target:
      name: Still Target
      on_press:
        - if:
            condition:
              lambda: 'return !id(display_mode);'
            then:
              - light.addressable_set:
                  id: rgb_led
                  range_from: 1
                  range_to: 1
                  color_brightness: 100%
                  red: 100%
                  green: 0%
                  blue: 0%
      on_release:
        - if:
            condition:
              lambda: 'return !id(display_mode);'
            then:
              - light.addressable_set:
                  id: rgb_led
                  range_from: 1
                  range_to: 1
                  color_brightness: 0%
                  red: 0%
                  green: 0%
                  blue: 0%

sensor:
  - platform: ld2410
    # light:
    #   name: light
    moving_distance:
      name : Moving Distance
    still_distance:
      name: Still Distance
    moving_energy:
      name: Move Energy
    still_energy:
      name: Still Energy
    detection_distance:
      name: Detection Distance
      on_value_range:
        - below: 20.0
          then:
            if:
              condition:
                # api.connected:
                lambda: |-
                  return (id(display_mode) && (millis() > 2000)); // Give boot status LED time to blink
              then:
                # *** RED ***
                - light.turn_on:
                    id: rgb_led
                    red: 100%
                    green: 0%
                    blue: 0%
                - light.turn_on:
                    id: rgb_led
                    effect: 'Scan 5'
        - above: 20.0
          below: 40.0
          then:
            if:
              condition:
                # api.connected:
                lambda: |-
                  return (id(display_mode) && (millis() > 2000)); // Give boot status LED time to blink
              then:
                # *** AMBER ***
                - light.turn_on:
                    id: rgb_led
                    red: 100%
                    green: 50%
                    blue: 0%
                - light.turn_on:
                    id: rgb_led
                    effect: 'Scan 3'
        - above: 40.0
          below: 60.0
          then:
            if:
              condition:
                # api.connected:
                lambda: |-
                  return (id(display_mode) && (millis() > 2000)); // Give boot status LED time to blink
              then:
                # *** GREEN ***
                - light.turn_on:
                    id: rgb_led
                    red: 0%
                    green: 100%
                    blue: 0%
                - light.turn_on:
                    id: rgb_led
                    effect: 'Scan 1'

    g0:
      move_energy:
        name: g0 move energy
      still_energy:
        name: g0 still energy
    g1:
      move_energy:
        name: g1 move energy
      still_energy:
        name: g1 still energy
    g2:
      move_energy:
        name: g2 move energy
      still_energy:
        name: g2 still energy
    g3:
      move_energy:
        name: g3 move energy
      still_energy:
        name: g3 still energy
    g4:
      move_energy:
        name: g4 move energy
      still_energy:
        name: g4 still energy
    g5:
      move_energy:
        name: g5 move energy
      still_energy:
        name: g5 still energy
    g6:
      move_energy:
        name: g6 move energy
      still_energy:
        name: g6 still energy
    g7:
      move_energy:
        name: g7 move energy
      still_energy:
        name: g7 still energy
    g8:
      move_energy:
        name: g8 move energy
      still_energy:
        name: g8 still energy

switch:
  - platform: ld2410
    engineering_mode:
      name: "engineering mode"
    bluetooth:
      name: "control bluetooth"

number:
  - platform: ld2410
    timeout:
      name: timeout
    # light_threshold:
    #   name: light threshold
    max_move_distance_gate:
      name: max move distance gate
    max_still_distance_gate:
      name: max still distance gate
    g0:
      move_threshold:
        name: g0 move threshold
      still_threshold:
        name: g0 still threshold
    g1:
      move_threshold:
        name: g1 move threshold
      still_threshold:
        name: g1 still threshold
    g2:
      move_threshold:
        name: g2 move threshold
      still_threshold:
        name: g2 still threshold
    g3:
      move_threshold:
        name: g3 move threshold
      still_threshold:
        name: g3 still threshold
    g4:
      move_threshold:
        name: g4 move threshold
      still_threshold:
        name: g4 still threshold
    g5:
      move_threshold:
        name: g5 move threshold
      still_threshold:
        name: g5 still threshold
    g6:
      move_threshold:
        name: g6 move threshold
      still_threshold:
        name: g6 still threshold
    g7:
      move_threshold:
        name: g7 move threshold
      still_threshold:
        name: g7 still threshold
    g8:
      move_threshold:
        name: g8 move threshold
      still_threshold:
        name: g8 still threshold