esphome:
  name: ${dev_name}
  friendly_name: ${friend_name}
  comment: Temperature sensor. M5Stack Stamp-Pico, DS18B20 sensor, and HT16K33 alpha numeric display.
  on_boot:
    priority: 600
    then:
      # Force a value out of normal range to help 'on_value_range()' actually register a boundary crossing
      # - lambda: 'id(outside_temp).publish_state(0.0);'
      - light.turn_on:
          id: five_rgb 
          effect: 'Rainbow'
          brightness: 100%
      - delay: 10s
      - light.turn_on:
          id: five_rgb 
          effect: 'None'
          brightness: 90% # set initial brightness, thereafter can be set in HA UI

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api:
  encryption:
    key: !secret api_key

ota:

button:
  - platform: restart
    name: ESP32 restart

number:
  - platform: template
    name: LED brightness
    id: led_brightness
    initial_value: 50
    optimistic: True
    min_value: 0
    max_value: 100
    step: 10
    mode: slider

dallas:
  - pin: 25
    update_interval: 15s

sensor:
  - platform: dallas
    name: Internal # DS18B20 mounted to PCB
    id: internal_temp
    address: ${ds18b20_internal_addr}
    # accuracy_decimals: 2
    filters:
      - offset: 0.0
      # - exponential_moving_average:
      #     alpha: 0.4
      #     send_every: 6
  - platform: dallas
    name: External # DS18B20 on external wire
    id: outside_temp
    address: ${ds18b20_external_addr}
    # accuracy_decimals: 2
    filters:
      - offset: 0.0
      # - exponential_moving_average:
      #     alpha: 0.4
      #     send_every: 6
    on_value_range:
      - below: 16.9
        then:
          # *** BLUE ***
          - light.turn_on:
              id: five_rgb
              red: 0%
              green: 0%
              blue: 100%
      - above: 17.0
        below: 24.9
        then:
          # *** GREEN ***
          - light.turn_on:
              id: five_rgb
              red: 0%
              green: 100%
              blue: 0%
      - above: 25.0
        below: 30.9
        then:
          # *** ORANGE ***
          - light.turn_on:
              id: five_rgb
              # Orange: rgb_color: 255, 191, 0
              red: 100%
              green: 75%
              blue: 0%
      - above: 31.0
        then:
          # *** RED ***
          - light.turn_on:
              id: five_rgb
              red: 100%
              green: 0%
              blue: 0%

# I2C pins for the HT16K33 I2C 4-digit LED display
i2c:
  frequency: 400kHz
  sda: GPIO21
  scl: GPIO22

external_components:
  - source:
      type: git
      url: https://github.com/ssieb/custom_components
    components: [ ht16k33_alpha ]
    refresh: 1d # set this to zero seconds `0s` to force an immediate refresh
    
display:
  # https://github.com/ssieb/custom_components/tree/master/components/ht16k33_alpha
  - platform: ht16k33_alpha
    address: 0x70
    # update_interval: 1s
    scroll: False
    # scroll_speed: 200ms # time between each movement
    # scroll_dwell: 5s   # time to wait at the end before going back to the start
    # scroll_delay: 4   # the number of scroll_speed cycles to wait at the beginning before starting to scroll
    id: led_display
    lambda: |-
      float temperature = id(outside_temp).state;
      it.printf("%.1f%c", temperature, 27); // char 27 is degree symbol, see source code "font.h"
      id(led_display).set_brightness(id(led_brightness).state / 100.0); // brightness of the lcd_ht16k33 LED display [0.1 - 1.0]

light:
  - platform: neopixelbus
    id: five_rgb
    name: Five RGB
    internal: False
    variant: WS2812
    pin: 19
    num_leds: 5
    type: GRB
    default_transition_length: 100ms
    effects:
      - addressable_rainbow:
          name: Rainbow
          speed: 10
          width: 15
      - addressable_scan:
          name: Scan 40ms
          move_interval: 40ms
          scan_width: 1
      - addressable_scan:
          name: Scan 500ms
          move_interval: 500ms
          scan_width: 1

globals:
  - id: cntr1
    type: int
    initial_value: '0'
  - id: cntr2
    type: int
    initial_value: '0'

# interval:
  # 5x RGB LED bar
  # - interval: 2s
  #   then:
  #     # - light.turn_on: five_rgb
  #     - light.addressable_set:
  #         id: five_rgb
  #         range_from: 0
  #         range_to: 4
  #         color_brightness: 1.0
  #         red: 1.0
  #         green: 1.0
  #         blue: 0.0
  # Stamp Pico heatbeat LED
  # - interval: 5s
  #   then:
  #     - light.turn_on:
  #         id: stamp_led
  #         color_brightness: 1.0
  #         red: 0.0
  #         green: 1.0
  #         blue: 0.0
  #     - delay: 200ms
  #     - light.turn_off: stamp_led

